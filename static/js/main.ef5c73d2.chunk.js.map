{"version":3,"sources":["App.module.css","redux/actionTypes.js","redux/contacts/contactsReducer.js","redux/theme/themeReducer.js","redux/store.js","components/section/Section.js","components/input/Input.js","components/button/Button.js","redux/contacts/contactsActions.js","components/addContactform/AddContactform.js","components/filter/Filter.js","components/contactItem/ContactItem.js","components/contacts/Contacts.js","redux/theme/themeActions.js","components/switch/Switch.js","App.js","services/helpers.js","index.js"],"names":["module","exports","actionTypes","ADD_CONTACT","DELETE_CONTACT","FILTER_CONTACTS","SWITCH_THEME","initialState","list","filter","contactReducer","state","action","type","payload","contact","item","id","currentTheme","themeReducer","persistConfig","key","storage","rootReducer","combineReducers","contacts","theme","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistStore","Section","name","children","Input","value","label","placeholder","onChange","shortid","generate","htmlFor","defaultProps","Button","onClick","clsn","className","event","target","number","AddContactform","handleInput","e","setState","handleSubmit","preventDefault","newContact","trim","props","addContact","this","Component","connect","dispatch","contactsActions","setFilter","query","find","deleteContact","Contacts","map","SwitchOne","checked","handleChange","parsedTheme","JSON","parse","localStorage","getItem","prevProps","prevState","toggleTheme","Switch","color","inputProps","themeActions","array","styles","AppLight","AppDark","length","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,SAAW,qCAAqC,QAAU,sC,0LCMpFC,EAPK,CAClBC,YAAa,cACbC,eAAgB,iBAChBC,gBAAiB,kBACjBC,aAAc,gBCFVC,EAAe,CACnBC,KAAM,GACNC,OAAQ,IA4BKC,MAzBf,WAAuD,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCACpD,OAAQA,EAAOC,MACb,KAAKX,EAAYC,YACf,OAAO,2BACFQ,GADL,IAEEH,KAAK,GAAD,mBAAMG,EAAMH,MAAZ,CAAkBI,EAAOE,QAAQC,YAGzC,KAAKb,EAAYE,eACf,OAAO,2BACFO,GADL,IAEEH,KAAMG,EAAMH,KAAKC,QAAO,SAACO,GAAD,OAAUA,EAAKC,KAAOL,EAAOE,QAAQG,QAGjE,KAAKf,EAAYG,gBACf,OAAO,2BACFM,GADL,IAEEF,OAAQG,EAAOE,QAAQL,SAG3B,QACE,OAAOE,IC1BPJ,EAAe,CACnBW,aAAc,SAeDC,MAZf,WAAqD,IAA/BR,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCAClD,OAAQA,EAAOC,MACb,KAAKX,EAAYI,aACf,MAA2B,UAAvBK,EAAMO,aACD,CAAEA,aAAc,QACX,CAAEA,aAAc,SAEhC,QACE,OAAOP,ICRPS,EAAgB,CACpBC,IAAK,OACLC,aAGIC,EAAcC,YAAgB,CAClCC,SAAUf,EACVgB,MAAOP,IAGHQ,EAAmBC,YAAeR,EAAeG,GAE1CM,EAAQC,YACnBH,EACAI,OAAOC,8BAAgCD,OAAOC,gCAGhDC,YAAaJ,GCrBb,IAOeK,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACd,iCACGD,GAAQ,4BAAKA,GACbC,I,yDCFCC,EAAQ,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,MAAO1B,EAAwC,EAAxCA,KAAMsB,EAAkC,EAAlCA,KAAMK,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAChDxB,EAAKyB,IAAQC,WACnB,OACE,oCACE,2BAAOC,QAAS3B,GAAKsB,GACrB,2BACEtB,GAAIA,EACJqB,MAAOA,EACPzB,KAAMA,EACNsB,KAAMA,EACNK,YAAaA,EACbC,SAAUA,MAMlBJ,EAAMQ,aAAe,CACnBhC,KAAM,QAGOwB,QCtBTS,EAAS,SAAC,GAAmC,IAAjCX,EAAgC,EAAhCA,KAAMtB,EAA0B,EAA1BA,KAAMkC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACrC,OACE,4BAAQC,UAAWD,EAAMnC,KAAMA,EAAMkC,QAASA,GAC3CZ,IAKPW,EAAOD,aAAe,CACpBhC,KAAM,UAGOiC,QCSA,EArBI,SAAC/B,GAAD,MAAc,CAC/BF,KAAMX,EAAYC,YAClBW,QAAS,CACPC,aAkBW,EAdO,SAACE,GAAD,MAAS,CAC7BJ,KAAMX,EAAYE,eAClBU,QAAS,CACPG,QAWW,EAPG,SAACiC,GAAD,MAAY,CAC5BrC,KAAMX,EAAYG,gBAClBS,QAAS,CACPL,OAAQyC,EAAMC,OAAOb,SCZnB/B,EAAe,CAAE4B,KAAM,GAAIiB,OAAQ,IAEnCC,E,4MACJ1C,MAAQ,CAAEwB,KAAM,GAAIiB,OAAQ,I,EAE5BE,YAAc,SAACC,GACb,EAAKC,SAAL,eAAiBD,EAAEJ,OAAOhB,KAAOoB,EAAEJ,OAAOb,S,EAG5CmB,aAAe,SAACF,GACdA,EAAEG,iBACF,IAAMC,EAAa,CACjB1C,GAAIyB,IAAQC,WACZR,KAAM,EAAKxB,MAAMwB,KACjBiB,OAAQ,EAAKzC,MAAMyC,QAEjB,EAAKzC,MAAMwB,KAAKyB,QAClB,EAAKC,MAAMC,WAAWH,GAExB,EAAKH,SAASjD,I,uDAId,OACE,8BACE,kBAAC,EAAD,CACE+B,MAAOyB,KAAKpD,MAAMwB,KAClBI,MAAM,OACNJ,KAAK,OACLM,SAAUsB,KAAKT,cAEjB,kBAAC,EAAD,CACEhB,MAAOyB,KAAKpD,MAAMyC,OAClBb,MAAM,SACNJ,KAAK,SACLM,SAAUsB,KAAKT,cAEjB,kBAAC,EAAD,CAAQnB,KAAK,cAActB,KAAK,SAASkC,QAASgB,KAAKN,oB,GAnClCO,aA6CdC,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCJ,WAAY,SAAC/C,GAAD,OAAamD,EAASC,EAA2BpD,QAGhDkD,CAAkCZ,GCzClCY,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCE,UAAW,SAACC,GAAD,OAAWH,EAASC,EAA0BE,QAG5CJ,EARA,SAAC,GAAD,IAAGG,EAAH,EAAGA,UAAH,OACb,kBAAC,EAAD,CAAO7B,MAAM,wBAAwBE,SAAU2B,EAAWjC,KAAK,cCiBlD8B,eAVS,SAACtD,EAAD,GAAoB,IAAVM,EAAS,EAATA,GAGhC,OAFiBN,EAAMc,SAAfjB,KACa8D,MAAK,SAACtD,GAAD,OAAUA,EAAKC,KAAOA,QAIvB,SAACiD,EAAD,OAAajD,EAAb,EAAaA,GAAb,MAAuB,CAChDsD,cAAe,kBAAML,EAASC,EAA8BlD,QAG/CgD,EAlBK,SAAC,GAAD,IAAG9B,EAAH,EAAGA,KAAMiB,EAAT,EAASA,OAAQmB,EAAjB,EAAiBA,cAAjB,OAClB,4BACE,0BAAMtB,UAAU,eAAed,GAC/B,0BAAMc,UAAU,iBAAiBG,GACjC,kBAAC,EAAD,CAAQjB,KAAK,SAASa,KAAK,YAAYD,QAASwB,QCIrCC,EAVE,SAAC,GAAkB,IAAhB/C,EAAe,EAAfA,SAClB,OACE,wBAAIwB,UAAU,gBACXxB,EAASgD,KAAI,SAACzD,GACb,OAAO,kBAAC,EAAD,CAAaK,IAAKL,EAAKC,GAAIA,GAAID,EAAKC,U,QCDpC,EAJK,iBAAO,CACzBJ,KAAMX,EAAYI,eCEdoE,E,4MACJ/D,MAAQ,CAAEgE,SAAS,G,EAenBC,aAAe,WACb,EAAKpB,UAAS,SAAC7C,GAAD,OACZA,EAAMgE,QAAU,CAAEA,SAAS,GAAU,CAAEA,SAAS,O,kEAdlD,IAAME,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBAChC,OAAhBJ,IAC6C,UAA/CC,KAAKC,MAAMF,EAAYnD,OAAOR,aAC1B6C,KAAKP,SAAS,CAAEmB,SAAS,IACzBZ,KAAKP,SAAS,CAAEmB,SAAS,O,yCAIdO,EAAWC,GAC5BA,EAAUR,UAAYZ,KAAKpD,MAAMgE,SAAWZ,KAAKF,MAAMuB,gB,+BAUvD,OACE,kBAACC,EAAA,EAAD,CACEpC,UAAU,SACV0B,QAASZ,KAAKpD,MAAMgE,QACpBlC,SAAUsB,KAAKa,aACfU,MAAM,UACNnD,KAAK,WACLoD,WAAY,CAAE,aAAc,0B,GA9BZvB,aA4CTC,eARS,SAACtD,EAAOkD,GAAR,MAAmB,CACzCnC,MAAOf,EAAMe,MAAMR,iBAGM,SAACgD,GAAD,MAAe,CACxCkB,YAAa,kBAAMlB,EAASsB,SAGfvB,CAA6CS,G,iBCjB7CT,eANS,SAAC,GAAD,IAAGxC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,MAA0B,CAChDD,SAAUA,EAASjB,KACnBC,OAAQgB,EAAShB,OACjBS,aAAcQ,EAAMR,gBAGP+C,EAtBH,SAAC,GAAD,ICVmBwB,EAAOnD,EDUvBb,EAAH,EAAGA,SAAUhB,EAAb,EAAaA,OAAQS,EAArB,EAAqBA,aAArB,OACV,yBAAK+B,UAA4B,UAAjB/B,EAA2BwE,IAAOC,SAAWD,IAAOE,SAClE,kBAAC,EAAD,MACA,yCACA,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAASzD,KAAK,YACXV,EAASoE,OAAS,GAAK,kBAAC,EAAD,MACxB,kBAAC,EAAD,CACEpE,SAAqB,KAAXhB,GCpBagF,EDoBkBhE,ECpBXa,EDoBqB7B,ECnBzDgF,EAAMhF,QAAO,SAACO,GAAD,OAAUA,EAAKmB,KAAK2D,cAAcC,SAASzD,EAAMwD,mBDmBKrE,S,MEbrEuE,IAASC,OACP,kBAAC,IAAD,CAAUpE,MAAOA,GACf,kBAAC,EAAD,OAEFqE,SAASC,eAAe,W","file":"static/js/main.ef5c73d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__O3aib\",\"AppLight\":\"App_AppLight__g7CnA App_App__O3aib\",\"AppDark\":\"App_AppDark__1jWZD App_App__O3aib\"};","const actionTypes = {\r\n  ADD_CONTACT: 'ADD_CONTACT',\r\n  DELETE_CONTACT: 'DELETE_CONTACT',\r\n  FILTER_CONTACTS: 'FILTER_CONTACTS',\r\n  SWITCH_THEME: 'SWITCH_THEME',\r\n};\r\n\r\nexport default actionTypes;\r\n","import actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  filter: '',\r\n};\r\n\r\nfunction contactReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload.contact],\r\n      };\r\n\r\n    case actionTypes.DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((item) => item.id !== action.payload.id),\r\n      };\r\n\r\n    case actionTypes.FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filter: action.payload.filter,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default contactReducer;\r\n","import actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  currentTheme: 'light',\r\n};\r\n\r\nfunction themeReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.SWITCH_THEME:\r\n      if (state.currentTheme === 'light') {\r\n        return { currentTheme: 'dark' };\r\n      } else return { currentTheme: 'light' };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default themeReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/contactsReducer';\r\nimport themeReducer from './theme/themeReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n  theme: themeReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(\r\n  persistedReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\npersistStore(store);\r\n","import React from 'react';\n\nconst Section = ({ name, children }) => (\n  <section>\n    {name && <h2>{name}</h2>}\n    {children}\n  </section>\n);\n\nexport default Section;\n","import React from 'react';\nimport shortid from 'shortid';\n\nconst Input = ({ value, label, type, name, placeholder, onChange }) => {\n  const id = shortid.generate();\n  return (\n    <>\n      <label htmlFor={id}>{label}</label>\n      <input\n        id={id}\n        value={value}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nInput.defaultProps = {\n  type: 'text',\n};\n\nexport default Input;\n","import React from 'react';\n\nconst Button = ({ name, type, onClick, clsn }) => {\n  return (\n    <button className={clsn} type={type} onClick={onClick}>\n      {name}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  type: 'button',\n};\n\nexport default Button;\n","import actionTypes from '../actionTypes';\r\n\r\nconst addContact = (contact) => ({\r\n  type: actionTypes.ADD_CONTACT,\r\n  payload: {\r\n    contact,\r\n  },\r\n});\r\n\r\nconst deleteContact = (id) => ({\r\n  type: actionTypes.DELETE_CONTACT,\r\n  payload: {\r\n    id,\r\n  },\r\n});\r\n\r\nconst setFilter = (event) => ({\r\n  type: actionTypes.FILTER_CONTACTS,\r\n  payload: {\r\n    filter: event.target.value,\r\n  },\r\n});\r\n\r\nexport default { addContact, deleteContact, setFilter };\r\n","import React, { Component } from 'react';\nimport Input from '../input/Input';\nimport Button from '../button/Button';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nconst initialState = { name: '', number: '' };\n\nclass AddContactform extends Component {\n  state = { name: '', number: '' };\n\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const newContact = {\n      id: shortid.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    if (this.state.name.trim()) {\n      this.props.addContact(newContact);\n    }\n    this.setState(initialState);\n  };\n\n  render() {\n    return (\n      <form>\n        <Input\n          value={this.state.name}\n          label=\"Name\"\n          name=\"name\"\n          onChange={this.handleInput}\n        />\n        <Input\n          value={this.state.number}\n          label=\"Number\"\n          name=\"number\"\n          onChange={this.handleInput}\n        />\n        <Button name=\"Add contact\" type=\"submit\" onClick={this.handleSubmit} />\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (contact) => dispatch(contactsActions.addContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(AddContactform);\n","import React from 'react';\nimport Input from '../input/Input';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nconst Filter = ({ setFilter }) => (\n  <Input label=\"Find contacts by name\" onChange={setFilter} name=\"filter\" />\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFilter: (query) => dispatch(contactsActions.setFilter(query)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import React from 'react';\r\nimport Button from '../button/Button';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\n\r\nconst ContactItem = ({ name, number, deleteContact }) => (\r\n  <li>\r\n    <span className=\"contactName\">{name}</span>\r\n    <span className=\"contactNumber\">{number}</span>\r\n    <Button name=\"Delete\" clsn=\"btnDelete\" onClick={deleteContact} />\r\n  </li>\r\n);\r\n\r\nconst mapStateToProps = (state, { id }) => {\r\n  const { list } = state.contacts;\r\n  const contact = list.find((item) => item.id === id);\r\n  return contact;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { id }) => ({\r\n  deleteContact: () => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import React from 'react';\r\nimport ContactItem from '../contactItem/ContactItem';\r\n\r\nconst Contacts = ({ contacts }) => {\r\n  return (\r\n    <ul className=\"contactsList\">\r\n      {contacts.map((item) => {\r\n        return <ContactItem key={item.id} id={item.id} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import actionTypes from '../actionTypes';\r\n\r\nconst switchTheme = () => ({\r\n  type: actionTypes.SWITCH_THEME,\r\n});\r\n\r\nexport default { switchTheme };\r\n","import React, { Component } from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { connect } from 'react-redux';\r\nimport themeActions from '../../redux/theme/themeActions';\r\n\r\nclass SwitchOne extends Component {\r\n  state = { checked: true };\r\n\r\n  componentDidMount() {\r\n    const parsedTheme = JSON.parse(localStorage.getItem('persist:root'));\r\n    if (parsedTheme !== null) {\r\n      JSON.parse(parsedTheme.theme).currentTheme === 'light'\r\n        ? this.setState({ checked: true })\r\n        : this.setState({ checked: false });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    prevState.checked !== this.state.checked && this.props.toggleTheme();\r\n  }\r\n\r\n  handleChange = () => {\r\n    this.setState((state) =>\r\n      state.checked ? { checked: false } : { checked: true }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Switch\r\n        className=\"switch\"\r\n        checked={this.state.checked}\r\n        onChange={this.handleChange}\r\n        color=\"primary\"\r\n        name=\"checkedB\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  theme: state.theme.currentTheme,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleTheme: () => dispatch(themeActions.switchTheme()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SwitchOne);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Section from './components/section/Section';\r\nimport AddContactform from './components/addContactform/AddContactform';\r\nimport Filter from './components/filter/Filter';\r\nimport Contacts from './components/contacts/Contacts';\r\nimport Switches from './components/switch/Switch';\r\nimport { filterContacts } from './services/helpers';\r\nimport styles from './App.module.css';\r\n\r\nconst App = ({ contacts, filter, currentTheme }) => (\r\n  <div className={currentTheme === 'light' ? styles.AppLight : styles.AppDark}>\r\n    <Switches />\r\n    <h1>Phonebook</h1>\r\n    <Section>\r\n      <AddContactform />\r\n    </Section>\r\n    <Section name=\"Contacts\">\r\n      {contacts.length > 1 && <Filter />}\r\n      <Contacts\r\n        contacts={filter !== '' ? filterContacts(contacts, filter) : contacts}\r\n      />\r\n    </Section>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = ({ contacts, theme }) => ({\r\n  contacts: contacts.list,\r\n  filter: contacts.filter,\r\n  currentTheme: theme.currentTheme,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","export const filterContacts = (array, value) =>\r\n  array.filter((item) => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\r\nexport const filterArrayDelete = (array, id) =>\r\n  array.filter((item) => {\r\n    return item.id !== id;\r\n  });\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}